1-create a config folder n file passport.js

	import required items
const localstrategy = require('passport-local').Strategy
const mongoose = require('mongoose')
const bcrypt = require('bcrypt')

const User - require('../models/User')

module.exports = function(passport) {
	passport.use(
		new localStrategy({usernameField: 'email'}, (email,password,done) =>{
			//match user using mongoose
			User.findone({ email: email})
				.then(user =>{
					if (!user){
						return done(null, false, {message: 'That email is not registered' })
					}
			//match password

					bcrypt.compare(password, user.password, (err, isMatch)=>{
						if(err) throw err
						if(isMatch) {
							return done(null, user)
						}else{
							return done(null, false, {message: 'password is incorrect'})
						}
					})
				)
				.catch(err => console.log(err))
	})

2- here we need to deserialize user instances to and from the session

	passport.serializeUser(function(isdone){
		done(null, user.id)
	})

	passport.deserializeUser(function(isdone){
		User.findById(id, function(err, user){
			done(err, user)
		})
	})


3- add middlewares in app.js 
import passport

require('./config/passport')(passport)

app.use(passport.initialize())
app.use(passport.session())


4- create your routes
import passport
router.post('/login', (req, res, next)=> {
	passport.authenticate('local',{
		successRedirect: '/dashboard',
		failureRedirect: '/users/login'
	})(req, res, next)
})

5- for logout
router.get('/logout', (req, res) => {
	req.logout()
	res.redirect('/users/login')
})





6- create a auth.js file


module.exports = {
	ensureAuthenticated: function(req, res, next){
		if(req.isAuthenticated()){
			return next()
		}
		res.redirect('/users/login')
	}
}

7- add ensureauthenticated

import 
const {ensureAuthenticated} = require('../config/auth')

and  pass it in as second parameter.



